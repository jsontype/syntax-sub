1. Git GUI 툴
    sourcetree (다양한 기능 포함, 범용적으로 사용됨)
    gitkraken (화려한 ui를 선호할 경우)
    * 그러나 터미널의 기능이 가장 많다.

1. Git Workflow 작업환경 일람
    local : 내 PC안의 git 작업폴더
        working directory : 작업하고 있는 폴더
        staging area : 버전 히스토리에 저장할 준비가 되어있는 스테이징 지역
            working directory에서 untracked / tracked 중 tracked만 staging에 갈 수 있다.
            working directory의 tracked 중에서 unmodified / modified 중 modified만 staging에 갈 수 있다.
        .git directory : (내 PC에 있는) 버전 히스토리를 가지고 있는 깃 리포지토리
    remote : 깃허브 서버안의 git 작업폴더
        .git directory : (깃혀브 서버에 있는) 버전 히스토리를 가지고 있는 깃 리포지토리

1. 깃 명령어 모음
    git config --list : git 설정 확인 (q로 나감)
    git config --global -e : 에디트모드로 git 글로벌 설정 확인
    git config --global core.editor "code --wait" : vscode로 git 글로벌 설정 확인
    git config --global user.name "jsontyper" : 깃허브 유저네임 연동
    git config --global user.email "jsontyper@gmail.com" : 깃허브 이메일 연동
    git config user.name : 깃허브 유저네임 확인
    git config user.email : 깃허브 이메일 확인
    git config --global core.autocrlf true : 윈도우에서 개행 통일 설정
    git config --global core.autocrlf input : 맥에서 개행 통일 설정
        * 개행 문자열이 os마다 다른데(윈도우는 \r\n, 맥은 \n), git repository의 줄바꿈 문자열이 달라지는데, 이것을 수정하는 설정
    git config --global alias.st status : 커스텀 약어를 설정. 여기서는 git status 대신 git st로 써도 되게 만들어서 이후 편하게 쓸 수 있다.
    git config --h : config에 대한 명령어의 추가 옵션들을 보여줌. (push, pull 등 타 명령어에도 --h 보기 가능)

